<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="8" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Loan Department" duration-ms="117" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
    <groups>
    </groups>
    <test name="Personal Loan" duration-ms="64" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
      <class name="test.day2">
        <test-method status="PASS" signature="Register()[pri:0, instance:test.day2@7dc7cbad]" name="Register" is-config="true" duration-ms="12" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="Login()[pri:0, instance:test.day2@7dc7cbad]" name="Login" is-config="true" duration-ms="0" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
      </class> <!-- test.day2 -->
      <class name="test.Demo1">
        <test-method status="PASS" signature="test1(java.lang.String)[pri:0, instance:test.Demo1@d2cc05a]" name="test1" duration-ms="5" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.mi.com/in/service/support/hungamaoffertv.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2(java.lang.String, java.lang.String)[pri:0, instance:test.Demo1@d2cc05a]" name="test2" duration-ms="1" started-at="2018-10-30T15:39:10Z" data-provider="getData" finished-at="2018-10-30T15:39:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[First@test.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2(java.lang.String, java.lang.String)[pri:0, instance:test.Demo1@d2cc05a]" name="test2" duration-ms="2" started-at="2018-10-30T15:39:10Z" data-provider="getData" finished-at="2018-10-30T15:39:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@mail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test2(java.lang.String, java.lang.String)[pri:0, instance:test.Demo1@d2cc05a]" name="test2" duration-ms="2" started-at="2018-10-30T15:39:10Z" data-provider="getData" finished-at="2018-10-30T15:39:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[est@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd567]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- test.Demo1 -->
    </test> <!-- Personal Loan -->
    <test name="Car Laon" duration-ms="16" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
      <class name="test.day4">
        <test-method status="PASS" signature="Login()[pri:0, instance:test.day4@61832929]" name="Login" duration-ms="2" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="Register()[pri:0, instance:test.day4@61832929]" name="Register" duration-ms="1" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Register -->
      </class> <!-- test.day4 -->
      <class name="test.day3">
        <test-method status="FAIL" signature="Register()[pri:0, instance:test.day3@5b275dab]" name="Register" duration-ms="3" started-at="2018-10-30T15:39:10Z" finished-at="2018-10-30T15:39:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [some] but found [Some]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [some] but found [Some]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at test.day3.Register(day3.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Register -->
      </class> <!-- test.day3 -->
    </test> <!-- Car Laon -->
  </suite> <!-- Loan Department -->
</testng-results>
